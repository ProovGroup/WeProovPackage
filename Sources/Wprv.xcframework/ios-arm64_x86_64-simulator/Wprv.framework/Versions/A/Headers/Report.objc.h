// Objective-C API for talking to github.com/ProovGroup/weproov-sdk-go/report Go package.
//   gobind -lang=objc github.com/ProovGroup/weproov-sdk-go/report
//
// File is generated by gobind. Do not edit.

#ifndef __Report_H__
#define __Report_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"

#include "Fscache.objc.h"
#include "User.objc.h"
#include "Utils.objc.h"
#include "Translations.objc.h"
#include "Items.objc.h"
#include "Wperr.objc.h"
#include "Proover.objc.h"
#include "Config.objc.h"
#include "Geoloc.objc.h"
#include "Keyvalue.objc.h"
#include "Pulldownload.objc.h"
#include "Rights.objc.h"
#include "S3image.objc.h"
#include "Templates.objc.h"

@class ReportCProcess;
@class ReportChange;
@class ReportChangeStruct;
@class ReportChecklist;
@class ReportIdentifierItems;
@class ReportImageMetaData;
@class ReportInfo;
@class ReportInfosParameters;
@class ReportList;
@class ReportListUpload;
@class ReportMeta;
@class ReportPart;
@class ReportProcess;
@class ReportProcessInfos;
@class ReportProcessInfosDamages;
@class ReportProcessStateList;
@class ReportStruct;
@class ReportSupport;
@class ReportUpload;
@class ReportVinInfoStruct;
@class ReportVinRequestStruct;
@class ReportWebviewParameters;
@class ReportWebviewValue;
@protocol ReportChangeHandler;
@class ReportChangeHandler;
@protocol ReportCloseDelegate;
@class ReportCloseDelegate;
@protocol ReportDeleteDelegate;
@class ReportDeleteDelegate;
@protocol ReportExistDelegate;
@class ReportExistDelegate;
@protocol ReportField;
@class ReportField;
@protocol ReportFullDelegate;
@class ReportFullDelegate;
@protocol ReportListDelegate;
@class ReportListDelegate;
@protocol ReportPDFDownloadDelegate;
@class ReportPDFDownloadDelegate;
@protocol ReportPhoto;
@class ReportPhoto;
@protocol ReportSignPartDelegate;
@class ReportSignPartDelegate;
@protocol ReportVINDelegate;
@class ReportVINDelegate;

@protocol ReportChangeHandler <NSObject>
- (void)onChange:(ReportChange* _Nullable)p0;
@end

@protocol ReportCloseDelegate <NSObject>
- (void)onCloseError:(NSError* _Nullable)err;
- (void)onCloseSuccess;
@end

@protocol ReportDeleteDelegate <NSObject>
- (void)onDeleteError:(NSError* _Nullable)err;
- (void)onDeleteSuccess;
@end

@protocol ReportExistDelegate <NSObject>
- (void)reportExist:(BOOL)p0;
- (void)reportExistError:(NSError* _Nullable)p0;
@end

@protocol ReportField <NSObject>
- (NSString* _Nonnull)dropoffValueF;
- (id<ReportField> _Nullable)getAsField;
- (ReportInfosParameters* _Nullable)getParams;
- (ReportPart* _Nullable)getPart;
- (ReportStruct* _Nullable)getReport;
- (BOOL)haveDropoff;
- (BOOL)isRequire;
- (NSString* _Nonnull)nameF;
- (NSString* _Nonnull)titleTr;
- (NSString* _Nonnull)typeF;
- (NSString* _Nonnull)valueF;
- (NSString* _Nonnull)writeValue:(NSString* _Nullable)p0;
@end

@protocol ReportFullDelegate <NSObject>
- (void)onReportFullError:(NSError* _Nullable)err;
- (void)onReportFullSuccess:(ReportStruct* _Nullable)report;
@end

@protocol ReportListDelegate <NSObject>
- (void)onReportFindError:(NSError* _Nullable)err;
- (void)onReportFindsuccess:(ReportList* _Nullable)list;
@end

@protocol ReportPDFDownloadDelegate <NSObject>
- (void)onPdfDownloadedError:(NSError* _Nullable)err;
- (void)onPdfDownloadedSuccess:(NSString* _Nullable)path;
@end

@protocol ReportPhoto <NSObject>
- (NSString* _Nonnull)getDropinPath;
- (NSString* _Nonnull)getDropoffPath;
- (BOOL)haveDropin;
- (BOOL)haveDropoff;
- (BOOL)haveDropoffState;
- (void)removeTemporary;
- (NSString* _Nonnull)titleTr;
- (NSString* _Nonnull)uTplName;
- (NSString* _Nonnull)writeImage:(NSData* _Nullable)p0 error:(NSError* _Nullable* _Nullable)error;
@end

@protocol ReportSignPartDelegate <NSObject>
- (void)onSignatureUploadError:(NSError* _Nullable)err;
- (void)onSignatureUploadSuccess;
@end

@protocol ReportVINDelegate <NSObject>
- (void)onVINError:(NSError* _Nullable)err;
- (void)onVINSuccess;
@end

@interface ReportCProcess : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long id_;
@property (nonatomic) NSString* _Nonnull name;
@property (nonatomic) long title;
@property (nonatomic) long cachedId;
@property (nonatomic) long number;
@property (nonatomic) long categoryId;
@property (nonatomic) NSString* _Nonnull orientation;
// skipped field CProcess.CreatedAt with unsupported type: time.Time

// skipped field CProcess.UpdatedAt with unsupported type: time.Time

@end

@interface ReportChange : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (int64_t)time;
- (NSString* _Nonnull)value;
@end

@interface ReportChangeStruct : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (ReportChange* _Nullable)getLastChange;
- (void)onChange:(NSString* _Nullable)value;
- (void)saveHandler:(id<ReportChangeHandler> _Nullable)h;
@end

@interface ReportChecklist : NSObject <goSeqRefInterface, ReportField> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field Checklist.ChangeStruct with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.ChangeStruct

/**
 * 		id de la checklist
		dans la bdd 0 si non initiliser
 */
@property (nonatomic) long id_;
/**
 * 		id du titre du champs
 */
@property (nonatomic) long titleId;
// skipped field Checklist.Title_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/translations.Translation

/**
 * 		Nom du champs.
		seras utiliser lor de l'import de contact/items
 */
@property (nonatomic) NSString* _Nonnull name;
/**
 * 		Permet de savoir si un champs est requis ou pas
 */
@property (nonatomic) BOOL required;
/**
 * 		Permet de savoir si un champs devras etre resaisi en mode
		dropoff
 */
@property (nonatomic) BOOL dropoff;
/**
 * 		Type du champs permet de sovire quelle est la forme du champs a afficher
		sur les checklist peut etre boolean/number
 */
@property (nonatomic) NSString* _Nonnull type;
@property (nonatomic) BOOL noRestart;
/**
 * 		ReadOnly indique que le champ doit être en lecture seule.
		Cela signifie que l'utilisateur ne peut pas modifier directement le champ
		mais cela n'empêche pas que le champ puisse être modifié programmatiquement
 */
@property (nonatomic) BOOL readOnly;
@property (nonatomic) BOOL hidden;
/**
 * 		Section permet de savoir ou afficher le champs
		sur les checklist se sera cheklist
 */
@property (nonatomic) NSString* _Nonnull section;
/**
 * 		FieldId permet de remonter jusque au model du champs
 */
@property (nonatomic) long fieldId;
/**
 * 		Part id permet de savoire la part parent
 */
@property (nonatomic) long partId;
/**
 * 		Report id permet de savoir la raport
 */
@property (nonatomic) long reportId;
/**
 * 		Position va me permetre de trier la list
 */
@property (nonatomic) long position;
/**
 * 		Value est la valeur du champs quand le rapport est en etat
		d'entrer('pending_first')
 */
@property (nonatomic) NSString* _Nonnull value;
/**
 * 		DropoffValue est la valeur du champs quand le rapport est en etat
		de sortie('pending_second')
 */
@property (nonatomic) NSString* _Nonnull dropoffValue;
// skipped field Checklist.CreatedAt with unsupported type: time.Time

// skipped field Checklist.UpdatedAt with unsupported type: time.Time

/**
 * 	Cette method sert a creer un lien entre le champs
	et le reste du rapport
 */
- (void)createLink:(ReportStruct* _Nullable)rpt part:(ReportPart* _Nullable)part;
/**
 * 	+ Permet de repondre au exigence de Field

	renvoie la valeur de retour du champs
 */
- (NSString* _Nonnull)dropoffValueF;
/**
 * 	Renvoyer la version caster en Field
 */
- (id<ReportField> _Nullable)getAsField;
- (ReportChange* _Nullable)getLastChange;
/**
 * 	Renvoy toujour nil mais permet de corespondre au type field
 */
- (ReportInfosParameters* _Nullable)getParams;
/**
 * 	Peremet de recuperer la part a qui apartient le champs
 */
- (ReportPart* _Nullable)getPart;
/**
 * 	Peremet de recuperer le rapport a qui apartient le champs
 */
- (ReportStruct* _Nullable)getReport;
/**
 * 	Permet de savoir si un etat
	dropoff seras appliquer a ce champs
 */
- (BOOL)haveDropoff;
- (BOOL)isCompleted;
/**
 * 	permet de savoire si le champs est require
 */
- (BOOL)isRequire;
/**
 * 	Permet de recuperer le nom du champs
 */
- (NSString* _Nonnull)nameF;
- (void)onChange:(NSString* _Nullable)value;
- (void)removeLink;
- (void)saveHandler:(id<ReportChangeHandler> _Nullable)h;
- (void)setTemplateMode;
- (NSString* _Nonnull)titleTr;
/**
 * 	+ Permet de repondre au exigence de Field

	renvoie le type du champs (numeric | boolean)
 */
- (NSString* _Nonnull)typeF;
- (void)updateByApi:(ReportChecklist* _Nullable)n;
/**
 * 	+ Permet de repondre au exigence de Field

	renvoie la valeur du champs
 */
- (NSString* _Nonnull)valueF;
- (void)webviewResponce:(NSString* _Nullable)value;
- (NSString* _Nonnull)writeValue:(NSString* _Nullable)value;
@end

@interface ReportIdentifierItems : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull value;
@property (nonatomic) NSString* _Nonnull name;
// skipped field IdentifierItems.Title_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/translations.Translation

@end

@interface ReportImageMetaData : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long width;
@property (nonatomic) long height;
@property (nonatomic) double longitude;
@property (nonatomic) double altitude;
@property (nonatomic) double latitude;
@property (nonatomic) NSString* _Nonnull orientation;
// skipped field ImageMetaData.Infos with unsupported type: []github.com/ProovGroup/weproov-sdk-go/report.ProcessInfos

@end

@interface ReportInfo : NSObject <goSeqRefInterface, ReportField> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field Info.ChangeStruct with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.ChangeStruct

@property (nonatomic) long id_;
@property (nonatomic) long titleId;
// skipped field Info.Title_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/translations.Translation

@property (nonatomic) NSString* _Nonnull name;
@property (nonatomic) BOOL dropoff;
@property (nonatomic) BOOL identifier;
@property (nonatomic) BOOL forced;
@property (nonatomic) BOOL required;
@property (nonatomic) BOOL referenced;
@property (nonatomic) BOOL noRestart;
/**
 * 		ReadOnly indique que le champ doit être en lecture seule.
		Cela signifie que l'utilisateur ne peut pas modifier directement le champ
		mais cela n'empêche pas que le champ puisse être modifié programmatiquement
 */
@property (nonatomic) BOOL readOnly;
@property (nonatomic) BOOL hidden;
@property (nonatomic) long categoryId;
@property (nonatomic) NSString* _Nonnull section;
@property (nonatomic) NSString* _Nonnull type;
@property (nonatomic) long fieldId;
@property (nonatomic) long partId;
@property (nonatomic) long reportId;
@property (nonatomic) long position;
// skipped field Info.Parameters with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.InfosParameters

@property (nonatomic) NSString* _Nonnull value;
@property (nonatomic) NSString* _Nonnull dropoffValue;
// skipped field Info.CreatedAt with unsupported type: time.Time

// skipped field Info.UpdatedAt with unsupported type: time.Time

- (void)createLink:(ReportStruct* _Nullable)rpt part:(ReportPart* _Nullable)part;
- (NSString* _Nonnull)dropoffValueF;
- (id<ReportField> _Nullable)getAsField;
- (ReportChange* _Nullable)getLastChange;
- (ReportInfosParameters* _Nullable)getParams;
- (ReportPart* _Nullable)getPart;
- (ReportStruct* _Nullable)getReport;
- (BOOL)haveDropoff;
- (BOOL)isCompleted:(NSError* _Nullable* _Nullable)error;
- (BOOL)isRequire;
- (NSString* _Nonnull)nameF;
- (void)onChange:(NSString* _Nullable)value;
- (void)removeLink:(ReportStruct* _Nullable)rpt part:(ReportPart* _Nullable)part;
- (void)saveHandler:(id<ReportChangeHandler> _Nullable)h;
- (void)searchVin:(id<ReportVINDelegate> _Nullable)vinDelegate;
- (void)setTemplateMode;
- (NSString* _Nonnull)titleTr;
- (NSString* _Nonnull)typeF;
- (void)updateByApi:(ReportInfo* _Nullable)n;
- (NSString* _Nonnull)valueF;
- (NSString* _Nonnull)writeValue:(NSString* _Nullable)value;
@end

@interface ReportInfosParameters : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field InfosParameters.List with unsupported type: []int

// skipped field InfosParameters.List_ with unsupported type: []github.com/ProovGroup/weproov-sdk-go/translations.Translation

// skipped field InfosParameters.Webview with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.WebviewParameters

@property (nonatomic) BOOL isMultiple;
@property (nonatomic) BOOL canSelectAll;
@property (nonatomic) BOOL isControlKey;
@property (nonatomic) NSString* _Nonnull controlKey;
@property (nonatomic) long min;
@property (nonatomic) long max;
- (long)getListIdByPosition:(NSString* _Nullable)tr;
- (NSString* _Nonnull)getListMutlipleTr:(NSString* _Nullable)idsStr;
- (long)getListPosition:(long)pose;
- (NSString* _Nonnull)getListTr:(long)id_;
- (ReportWebviewParameters* _Nullable)getWebview;
- (long)listCount;
@end

@interface ReportList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull state;
@property (nonatomic) NSString* _Nonnull find;
@property (nonatomic) long offset;
@property (nonatomic) long limit;
@property (nonatomic) BOOL haveMore;
// skipped field List.Result with unsupported type: []github.com/ProovGroup/weproov-sdk-go/report.Struct

- (long)count;
- (ReportStruct* _Nullable)get:(long)num;
- (void)next:(id<ReportListDelegate> _Nullable)delegate;
@end

@interface ReportListUpload : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field ListUpload.Uploads with unsupported type: []github.com/ProovGroup/weproov-sdk-go/report.Upload

// skipped method ListUpload.Add with unsupported parameter or return types

- (long)count;
- (ReportUpload* _Nullable)get:(long)num;
- (ReportUpload* _Nullable)getBySessionKey:(NSString* _Nullable)sessionKey;
- (ReportUpload* _Nullable)getKey:(NSString* _Nullable)key;
- (void)remove:(long)i;
- (void)save;
@end

@interface ReportMeta : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long title;
@property (nonatomic) NSString* _Nonnull value;
// skipped field Meta.Title_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/translations.Translation

- (NSString* _Nonnull)getTitleTr;
@end

@interface ReportPart : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long id_;
@property (nonatomic) long titleId;
// skipped field Part.Title_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/translations.Translation

@property (nonatomic) BOOL signer;
@property (nonatomic) NSString* _Nonnull signOnly;
@property (nonatomic) BOOL autorestart;
@property (nonatomic) long position;
@property (nonatomic) NSString* _Nonnull note;
@property (nonatomic) NSString* _Nonnull dropoffNote;
@property (nonatomic) long sign;
@property (nonatomic) long dropoffSign;
@property (nonatomic) BOOL item;
@property (nonatomic) long reportId;
@property (nonatomic) long prooverId;
@property (nonatomic) long itemsId;
@property (nonatomic) long categorieId;
@property (nonatomic) BOOL hiddenNote;
// skipped field Part.CreatedAt with unsupported type: time.Time

// skipped field Part.UpdatedAt with unsupported type: time.Time

// skipped field Part.Infos with unsupported type: []github.com/ProovGroup/weproov-sdk-go/report.Info

// skipped field Part.Supports with unsupported type: []github.com/ProovGroup/weproov-sdk-go/report.Support

// skipped field Part.Checklists with unsupported type: []github.com/ProovGroup/weproov-sdk-go/report.Checklist

// skipped field Part.TempMetaData with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.ImageMetaData

@property (nonatomic) BOOL haveSigned;
- (void)changeCguv:(BOOL)selected;
/**
 * ////////////////////// END Supports ////////////////////////
///////////////////////// Checklists ///////////////////////////

	ChecklistCount
	Permet de recuperer le nombre de supports
	presente dans le rapport
 */
- (long)checklistsCount;
- (void)close;
- (void)createLink:(ReportStruct* _Nullable)rpt;
- (ReportChecklist* _Nullable)getChecklistByName:(NSString* _Nullable)name;
- (ReportChecklist* _Nullable)getChecklists:(long)num;
- (ReportInfo* _Nullable)getInfos:(long)num;
- (ReportInfo* _Nullable)getInfosByName:(NSString* _Nullable)name;
- (ReportStruct* _Nullable)getReport;
- (ReportSupport* _Nullable)getSupports:(long)num;
- (ReportSupport* _Nullable)getSupportsByName:(NSString* _Nullable)name;
- (NSString* _Nonnull)getTitle;
- (BOOL)hasImportableFields;
/**
 * ////////////////////// Infos ///////////////////////////

	InfosCount
	Permet de recuperer le nombre de supports
	presente dans le rapport
 */
- (long)infosCount;
- (BOOL)isCompleted:(NSError* _Nullable* _Nullable)error;
/**
 * 	Permet de designer et d'importer les information de l'utilisateur dans la part
 */
- (void)itsMe;
- (void)noSign;
- (void)setTemplateMode;
/**
 * ////////////////////// END Infos ////////////////////////
////////////////////// Supports ///////////////////////////

	SupportsCount
	Permet de recuperer le nombre de supports
	presente dans le rapport
 */
- (long)supportsCount;
/**
 * ////////////////////// END Checklists ////////////////////////
 */
- (void)updateByApi:(ReportPart* _Nullable)n;
- (void)updateByItem:(ItemsStruct* _Nullable)item picture:(BOOL)picture;
- (void)updateByProover:(ProoverStruct* _Nullable)proover;
// skipped method Part.UpdateByWebview with unsupported parameter or return types

- (void)webviewResponce:(NSString* _Nullable)value;
- (NSString* _Nonnull)writeInfosPartSync:(NSData* _Nullable)data error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)writeSignature:(NSData* _Nullable)data error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)writeSignatureInfos:(NSData* _Nullable)data error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)writeSignaturePart:(NSData* _Nullable)data error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)writeSignaturePartSync:(NSData* _Nullable)data error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)writeSignatureSync:(NSData* _Nullable)data error:(NSError* _Nullable* _Nullable)error;
@end

@interface ReportProcess : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field Process.ChangeStruct with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.ChangeStruct

/**
 * 		Id du process dans la bdd
		si = 0 le raport ne semble pas initialiser
 */
@property (nonatomic) long id_;
/**
 * 		nom du process
		dois etre en minuscule sans accent et les mots
		son separer par un underscore(_)
		exemple:
		- font
		- back_left
		- ...
 */
@property (nonatomic) NSString* _Nonnull name;
/**
 * 		Title
		represente l'id de la traduction dans la bdd
 */
@property (nonatomic) long title;
// skipped field Process.Title_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/translations.Translation

/**
 * 		ProcessId
		est l'id du Process utiliser pour la creation du champs
 */
@property (nonatomic) long processId;
// skipped field Process.Process_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.CProcess

/**
 * 		CategoryId
		represente la category ou est classer dans WPA le preocess
 */
@property (nonatomic) long categoryId;
/**
 * 		Orientation
		represente l'oritentation qui a ete definie dans process
 */
@property (nonatomic) NSString* _Nonnull orientation;
/**
 * 		Dropoff = je sais pas trop ?
		Reqire = si le process est un process obligatoire
		Position = int repesentant sa position dans l'array
 */
@property (nonatomic) BOOL dropoff;
@property (nonatomic) BOOL required;
@property (nonatomic) BOOL noRestart;
/**
 * 		PictureId = id de la s3Picture dans la bdd
		Picture_ = object de la s3picture recuperer pour voir la key s3
		infos = represent les anotation sur la photo
 */
@property (nonatomic) long pictureId;
// skipped field Process.Picture_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.s3picture

// skipped field Process.Infos with unsupported type: []github.com/ProovGroup/weproov-sdk-go/report.ProcessInfos

@property (nonatomic) long dropoffPictureId;
// skipped field Process.DropoffPicture_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.s3picture

// skipped field Process.DropoffInfos with unsupported type: []github.com/ProovGroup/weproov-sdk-go/report.ProcessInfos

@property (nonatomic) BOOL isAnnotationsActive;
@property (nonatomic) BOOL isPictureAllowed;
@property (nonatomic) long maxPicturesCount;
@property (nonatomic) long mandatoryPicturesCount;
// skipped field Process.InfosDamages with unsupported type: []github.com/ProovGroup/weproov-sdk-go/report.ProcessInfosDamages

// skipped field Process.DropoffInfosDamages with unsupported type: []github.com/ProovGroup/weproov-sdk-go/report.ProcessInfosDamages

@property (nonatomic) long position;
@property (nonatomic) long firstAdditionalProcess;
// skipped field Process.FirstAdditionalProcess_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.CProcess

@property (nonatomic) long secondAdditionalProcess;
// skipped field Process.SecondAdditionalProcess_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.CProcess

@property (nonatomic) long thirdAdditionalProcess;
// skipped field Process.ThirdAdditionalProcess_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.CProcess

/**
 * 		Id du raport ou il est lier
		si == 0 le rapport est un template
 */
@property (nonatomic) long reportId;
// skipped field Process.CreatedAt with unsupported type: time.Time

// skipped field Process.UpdatedAt with unsupported type: time.Time

// skipped field Process.TempMetaData with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.ImageMetaData

@property (nonatomic) BOOL needToDelete;
// skipped field Process.IAModels with unsupported type: []string

@property (nonatomic) NSString* _Nonnull iaReturn;
@property (nonatomic) long iaReturnTRID;
@property (nonatomic) NSString* _Nonnull iaReturnTranslated;
@property (nonatomic) NSString* _Nonnull iaDropOffReturn;
@property (nonatomic) long iaDropOffTRID;
@property (nonatomic) NSString* _Nonnull iaDropOffReturnTranslated;
- (void)addInfoDamage:(ReportProcessInfosDamages* _Nullable)infoDamage;
/**
 * 	Ajout d'une information

	TODO: cas peut etre a gerer le met reviens faut il faire une copie
	en gros je commence -> juplod -> je recuper -> je modifie il se passe quoi ?
	voire pour peut etre gerer une version temporaire comme pour l'image
 */
- (void)addInfos:(long)index choice:(long)choice description:(NSString* _Nullable)description x:(double)x y:(double)y width:(double)width height:(double)height;
- (void)close;
- (long)countDropoffInfosDamages;
- (long)countInfosDamages;
- (void)createLink:(ReportStruct* _Nullable)rpt;
- (long)dropoffInfosCount;
- (ReportProcessInfos* _Nullable)dropoffInfosGet:(long)num;
- (void)duplicateInfoDamages;
- (ReportCProcess* _Nullable)getAdditionalPictureProcess:(long)index;
- (long)getAdditionalPictureProcessID:(long)index;
- (NSString* _Nonnull)getDropinReturnIA;
- (ReportProcessInfosDamages* _Nullable)getDropoffInfosDamages:(long)num;
- (NSString* _Nonnull)getDropoffPicturePath;
- (NSString* _Nonnull)getDropoffPicturePathS3;
- (NSString* _Nonnull)getDropoffReturnIA;
- (NSString* _Nonnull)getIAModels;
- (ReportProcessInfosDamages* _Nullable)getInfosDamages:(long)num;
- (ReportChange* _Nullable)getLastChange;
- (NSString* _Nonnull)getPicturePath;
- (NSString* _Nonnull)getPicturePathS3;
/**
 * 	Permet de recuperer l'id d'un image calque

	TODO: serais peut etre interessans de permet
	la recuperation du path directement
 */
- (long)getProcessCachedId;
- (ReportStruct* _Nullable)getReport;
- (NSString* _Nonnull)getReturnIA;
- (NSString* _Nonnull)getTempPath;
// skipped method Process.GetTmpMeta with unsupported parameter or return types

- (BOOL)haveAnyDropoffPicture;
- (BOOL)haveAnyPicture;
/**
 * 	permet de savoire si il faut download
	une image dropoff en verifiant si un path s3 est present
 */
- (BOOL)haveDropoffPictureToDownload;
/**
 * 	permet de savoire si il faut download
	une image en verifiant si un path s3 est present
 */
- (BOOL)havePictureToDownload;
- (BOOL)haveTemporyData;
- (NSString* _Nonnull)imgType;
/**
 * 	Suprime tout les information d'entrer

	TODO: cas peut etre a gerer le met reviens faut il faire une copie
	en gros je commence -> juplod -> je recuper -> je modifie il se passe quoi ?
	voire pour peut etre gerer une version temporaire comme pour l'image
 */
- (void)infosClean;
/**
 * 	renvois le nombre d'info/annotation du dropin
 */
- (long)infosCount;
/**
 * 	Renvois l'information a l index x
	TODO: securiser du out of index
 */
- (ReportProcessInfos* _Nullable)infosGet:(long)num;
- (BOOL)isCompared;
- (BOOL)isCompleted;
- (void)onChange:(NSString* _Nullable)value;
- (void)removeInfoDamage:(long)index;
- (void)removeInfos:(long)index;
- (void)removeTemporary;
- (void)saveHandler:(id<ReportChangeHandler> _Nullable)h;
- (void)setCompared:(BOOL)to;
- (void)setInfoDamage:(long)index choice:(long)choice description:(NSString* _Nullable)description x:(double)x y:(double)y width:(double)width height:(double)height;
- (void)setReturnIA:(NSString* _Nullable)value;
- (void)setTemplateMode;
- (NSString* _Nonnull)titleTr;
- (long)uid;
- (NSString* _Nonnull)uTplName;
- (void)updateByApi:(ReportProcess* _Nullable)n;
- (void)updateByItem:(ItemsProcess* _Nullable)item;
- (NSString* _Nonnull)writeImage:(NSData* _Nullable)data error:(NSError* _Nullable* _Nullable)error;
@end

@interface ReportProcessInfos : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long choice;
@property (nonatomic) long index;
@property (nonatomic) NSString* _Nonnull description;
@property (nonatomic) double height;
@property (nonatomic) double width;
@property (nonatomic) double left;
@property (nonatomic) double top;
@end

@interface ReportProcessInfosDamages : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long id_;
@property (nonatomic) long index;
@property (nonatomic) long choice;
@property (nonatomic) NSString* _Nonnull description;
@property (nonatomic) double height;
@property (nonatomic) double width;
@property (nonatomic) double left;
@property (nonatomic) double top;
@property (nonatomic) long processID;
@property (nonatomic) long processPosition;
@property (nonatomic) long additionalPicturesCount;
@property (nonatomic) long additionalPictureID_1;
@property (nonatomic) long additionalPictureID_2;
@property (nonatomic) long additionalPictureID_3;
// skipped field ProcessInfosDamages.AdditionalPicture_1_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.s3picture

// skipped field ProcessInfosDamages.AdditionalPicture_2_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.s3picture

// skipped field ProcessInfosDamages.AdditionalPicture_3_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.s3picture

// skipped field ProcessInfosDamages.MatrixAnswers with unsupported type: []string

@property (nonatomic) long matrixPrice;
@property (nonatomic) BOOL isPrice;
// skipped field ProcessInfosDamages.MatrixAnswersStruct with unsupported type: github.com/ProovGroup/weproov-sdk-go/matrices.SMatrixEntries

// skipped field ProcessInfosDamages.TMPMatrixAnswers with unsupported type: []string

@property (nonatomic) long tmpMatrixPrice;
@property (nonatomic) BOOL tmpIsPrice;
// skipped field ProcessInfosDamages.TMPMatrixAnswersStruct with unsupported type: github.com/ProovGroup/weproov-sdk-go/matrices.SMatrixEntries

- (void)cancelEdit;
- (long)count;
- (void)createLink:(ReportProcess* _Nullable)p0 r:(ReportStruct* _Nullable)r;
- (NSString* _Nonnull)getAnswers;
- (NSString* _Nonnull)getPicturePath:(long)index error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)getPicturePathS3:(long)index error:(NSError* _Nullable* _Nullable)error;
// skipped method ProcessInfosDamages.GetPicturesPath with unsupported parameter or return types

// skipped method ProcessInfosDamages.GetPicturesPathS3 with unsupported parameter or return types

/**
 * // Renvois -1 if is_price = false
 */
- (long)getPrice;
- (NSString* _Nonnull)getQuestion;
/**
 * Return MatrixAnswers from Struct
 */
- (NSString* _Nonnull)getSelectedAnswers;
- (NSString* _Nonnull)getTempName:(long)index;
- (BOOL)havePictureToDownload;
- (BOOL)haveTemporyData:(long)index;
- (BOOL)isMatrix;
- (void)removeAnswers;
- (BOOL)removeLastAnswer:(NSError* _Nullable* _Nullable)error;
- (void)removeLink;
- (void)removeTemporary;
- (BOOL)setAnswer:(NSString* _Nullable)answer error:(NSError* _Nullable* _Nullable)error;
- (void)updatePicturesByItem:(ItemsDamage* _Nullable)item;
- (NSString* _Nonnull)writeImage:(NSData* _Nullable)data error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)writeImageByID:(NSData* _Nullable)data index:(long)index error:(NSError* _Nullable* _Nullable)error;
@end

@interface ReportProcessStateList : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (void)append:(ReportProcess* _Nullable)process;
- (NSString* _Nonnull)compareStatus;
- (long)count;
- (ReportProcess* _Nullable)get:(long)num;
- (long)getFirstIndexNotCompared;
- (void)resetAll;
- (NSString* _Nonnull)statusDropin;
- (NSString* _Nonnull)statusDropoff;
@end

@interface ReportStruct : NSObject <goSeqRefInterface, PulldownloadDownloadable> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * 		Id Du Rapport
 */
@property (nonatomic) long id_;
/**
 * 		Title du Rapport
		TitleId correspond a l'id dans la table translate
		Title_ correspond a l'object de la traduction
 */
@property (nonatomic) long titleId;
// skipped field Struct.Title_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/translations.Translation

// skipped field Struct.Description_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/translations.Translation

@property (nonatomic) long descriptionId;
/**
 * 		Dropoff
		permet de savoir si le rapport passeras par un state
		pending_second
 */
@property (nonatomic) BOOL dropoff;
/**
 * 		FullDropoff
		permet de savoir si au rapport de retour(pending_second)
		il seras necessaire de forcer la reprise des photos de depard
		si le qu rapport de depard une photos etait obligatoire
		au raport de retour la photos le seras aussi
 */
@property (nonatomic) BOOL fullDropoff;
// skipped field Struct.Meta with unsupported type: []github.com/ProovGroup/weproov-sdk-go/report.Meta

/**
 * 		ProovCode = code unique du rapport
		6 character alpha numeric en upper case
 */
@property (nonatomic) NSString* _Nonnull proovCode;
/**
 * 		Password n ais a se jour pas utiliser
		6 character alpha numeric en upper case
 */
@property (nonatomic) NSString* _Nonnull password;
/**
 * 		AutoRestart
		Definie comme quoi le raport redemare automatiquement quand son
		etas passe a 'finished'
 */
@property (nonatomic) BOOL autoRestart;
/**
 * 		RestartState
		Permet de set l'etat du raport lors d'un auto restart
 */
@property (nonatomic) NSString* _Nonnull restartState;
@property (nonatomic) NSString* _Nonnull state;
// skipped field Struct.Geoloc with unsupported type: github.com/ProovGroup/weproov-sdk-go/geoloc.Struct

// skipped field Struct.GeolocDropoff with unsupported type: github.com/ProovGroup/weproov-sdk-go/geoloc.Struct

/**
 * 		PreviewPicture
		est la photo qui dois etre afficher dans les list
		il est possible quelle soit vide (valeur = 0)
 */
@property (nonatomic) long previewPicture;
// skipped field Struct.PreviewPictureProcess with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.Process

/**
 * 		Mails
		liste d'emails d'on une copie du raport seras transmise
 */
@property (nonatomic) NSString* _Nonnull mails;
/**
 * 		RefStr
		represent un liste de key=value separer par des ':'
		cette string permet de faire des recherche
 */
@property (nonatomic) NSString* _Nonnull refStr;
/**
 * 		CategoryId
		id de la category du raport
 */
@property (nonatomic) long categoryId;
// skipped field Struct.Webhook with unsupported type: []string

/**
 * 		id du proprietaire du rapport
		soit l'entreprise_id soit l'id de lutilisateur qui la initialiser
 */
@property (nonatomic) long owner;
// skipped field Struct.Doer with unsupported type: *int

// skipped field Struct.DropoffDoer with unsupported type: *int

/**
 * 		TemplateId
		id du template qui a generer le raport
 */
@property (nonatomic) long templateId;
/**
 * 		CustomRef
		reference passer a l'api pour les societer
 */
@property (nonatomic) NSString* _Nonnull customRef;
/**
 * 		ImageReport
		id representant un cachedImage
		Seras le logo aposer sur un rapport
		(prioritaire par raport au logo de l'utilisateur)
 */
@property (nonatomic) long imageReport;
@property (nonatomic) NSString* _Nonnull pdfHeaderBackgroundColor;
@property (nonatomic) NSString* _Nonnull pdfHeaderTextColor;
// skipped field Struct.FinishedAt with unsupported type: time.Time

// skipped field Struct.DropoffFinishedAt with unsupported type: time.Time

// skipped field Struct.DeletedAt with unsupported type: time.Time

// skipped field Struct.UpdatedAt with unsupported type: time.Time

// skipped field Struct.CreatedAt with unsupported type: time.Time

// skipped field Struct.CellTimeClose with unsupported type: time.Time

// skipped field Struct.GeolocClose with unsupported type: github.com/ProovGroup/weproov-sdk-go/geoloc.Struct

@property (nonatomic) long userClose;
@property (nonatomic) long ownerClose;
@property (nonatomic) NSString* _Nonnull appLang;
@property (nonatomic) BOOL sendEmail;
@property (nonatomic) BOOL showGeolocPDF;
// skipped field Struct.Parts with unsupported type: []github.com/ProovGroup/weproov-sdk-go/report.Part

// skipped field Struct.Process with unsupported type: []github.com/ProovGroup/weproov-sdk-go/report.Process

@property (nonatomic) BOOL needSetNextStep;
// skipped field Struct.Journal with unsupported type: github.com/ProovGroup/weproov-sdk-go/journal.Struct

// skipped field Struct.IdentiferItems with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.IdentifierItems

// skipped field Struct.MatrixID with unsupported type: *int

// skipped field Struct.Matrix with unsupported type: github.com/ProovGroup/weproov-sdk-go/matrices.SMatrixFilled

- (void)allOkNoSignaled;
- (id<PulldownloadDownloadable> _Nullable)asDownloadable;
- (void)close;
- (void)createLink;
- (void)delete:(id<ReportDeleteDelegate> _Nullable)delegate;
- (PulldownloadStruct* _Nullable)download:(id<PulldownloadManagerDelegate> _Nullable)delegate;
- (void)downloadLastPdf:(id<ReportPDFDownloadDelegate> _Nullable)delegate;
- (NSString* _Nonnull)downloadLastPdfSync:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)getCachePath:(NSString* _Nullable)name;
- (long)getCountAllPicture;
- (long)getCountAllPictureRequire;
- (long)getCountAllSignatories;
- (long)getCountSetIaReturn;
- (NSString* _Nonnull)getDescriptionTr;
- (NSString* _Nonnull)getDropoffFinishedAt;
- (int64_t)getDropoffFinishedAtUnix;
- (NSString* _Nonnull)getFinishedAt;
- (int64_t)getFinishedAtUnix;
- (NSString* _Nonnull)getIdentifier;
- (int64_t)getLastUpdateUnix;
/**
 * 	Permet de renvoyer la langue choisie pour le raport
	ou la langue du telephone a defaut
 */
- (NSString* _Nonnull)getLocal;
/**
 * 	Renvoy une metas d'on le num est l'index
 */
- (ReportMeta* _Nullable)getMeta:(long)num;
/**
 * 	permet de recuperer la part dont
	le num est l'index dans l array
 */
- (ReportPart* _Nullable)getParts:(long)num;
/**
 * 	Permet de recuperer l'image de preview au format 'thumb'
 */
- (void)getPreviewThumb:(id<S3imageThumbDelegate> _Nullable)delegate;
/**
 * 	permet de recuperer le process dont
	le num est l'index dans l array
 */
- (ReportProcess* _Nullable)getProcess:(long)num;
- (ReportProcess* _Nullable)getProcessByName:(NSString* _Nullable)name;
/**
 * Renvois -1 if is_price == false
 */
- (long)getSumPrices;
- (NSData* _Nullable)getTempJson:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)getTitleTr;
- (NSString* _Nonnull)getUpdatedAt;
- (BOOL)haveCache:(NSString* _Nullable)name;
- (BOOL)haveSignaledPicture;
/**
 * 	Verifie la totaliter du rapport si tout est pres
	pour passer a l'etape suivante
 */
- (BOOL)isCompleted:(NSError* _Nullable* _Nullable)error;
/**
 * 	Permet de s'avoir si le raport en mode dropin
 */
- (BOOL)isDropin;
/**
 * 	Permet de s'avoir si le rapport en mode dropoff
	(en retour)
 */
- (BOOL)isDropoff;
/**
 * 	Permet de s'avoir si le rapport en mode historique / terminer
 */
- (BOOL)isHistory;
/**
 * 	Permet de s'avoir si le rapport peut etre ecrie
 */
- (BOOL)isLocked;
- (BOOL)isMatrix;
/**
 * 	Permet de connaitre le nombre de metas enregistrer
 */
- (long)metaCount;
/**
 * ////////////////////// PARTS ///////////////////////////

	PartsCount
	Permet de recuperer le nombre de partie
	presente dans le rapport
 */
- (long)partsCount;
- (BOOL)previewIs:(NSString* _Nullable)path;
/**
 * ////////////////////// PROCESS ///////////////////////////

	PartsCount
	Permet de recuperer le nombre de partie
	presente dans le rapport
 */
- (long)processCount;
/**
 * 	vide tout les images qui ne son
	pas encors envoyer sur le server
 */
- (void)removeAllTemporaryProcess;
- (void)removeCache:(NSString* _Nullable)name;
- (NSString* _Nonnull)saveCache:(NSString* _Nullable)name data:(NSData* _Nullable)data error:(NSError* _Nullable* _Nullable)error;
- (void)saveTemp;
- (NSString* _Nonnull)saveToServer:(NSError* _Nullable* _Nullable)error;
/**
 * 	Pemet de set la langue du raport
	elle ne changeras pas la lang global du framwork
 */
- (void)setLocal:(NSString* _Nullable)lang;
- (NSString* _Nonnull)setNextStep:(NSError* _Nullable* _Nullable)error;
- (void)setTemplateMode;
- (void)updateByApi:(ReportStruct* _Nullable)n;
- (void)updateWithItem:(ItemsStruct* _Nullable)item picture:(BOOL)picture optionalPicture:(BOOL)optionalPicture;
// skipped method Struct.UpdateWithWebview with unsupported parameter or return types

- (NSString* _Nonnull)urlForPreview;
@end

@interface ReportSupport : NSObject <goSeqRefInterface, ReportPhoto> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field Support.ChangeStruct with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.ChangeStruct

@property (nonatomic) long id_;
@property (nonatomic) NSString* _Nonnull name;
@property (nonatomic) long titleId;
// skipped field Support.Title_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/translations.Translation

@property (nonatomic) BOOL required;
@property (nonatomic) BOOL dropoff;
@property (nonatomic) long position;
@property (nonatomic) NSString* _Nonnull section;
@property (nonatomic) NSString* _Nonnull type;
@property (nonatomic) BOOL noRestart;
@property (nonatomic) long reportId;
@property (nonatomic) long fieldId;
@property (nonatomic) long partId;
@property (nonatomic) long pictureId;
// skipped field Support.Picture_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.s3picture

// skipped field Support.Infos with unsupported type: []github.com/ProovGroup/weproov-sdk-go/report.ProcessInfos

@property (nonatomic) long dropoffPictureId;
// skipped field Support.DropoffPicture_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.s3picture

// skipped field Support.DropoffInfos with unsupported type: []github.com/ProovGroup/weproov-sdk-go/report.ProcessInfos

// skipped field Support.CreatedAt with unsupported type: time.Time

// skipped field Support.UpdatedAt with unsupported type: time.Time

// skipped field Support.TempMetaData with unsupported type: github.com/ProovGroup/weproov-sdk-go/report.ImageMetaData

/**
 * 	Ajout d'une information

	TODO: cas peut etre a gerer le met reviens faut il faire une copie
	en gros je commence -> juplod -> je recuper -> je modifie il se passe quoi ?
	voire pour peut etre gerer une version temporaire comme pour l'image
 */
- (void)addInfos:(long)index choice:(long)choice description:(NSString* _Nullable)description x:(double)x y:(double)y width:(double)width height:(double)height;
- (id<ReportPhoto> _Nullable)asPhoto;
- (void)createLink:(ReportStruct* _Nullable)rpt part:(ReportPart* _Nullable)part;
- (long)dropoffInfosCount;
- (ReportProcessInfos* _Nullable)dropoffInfosGet:(long)num;
- (NSString* _Nonnull)getDropinPath;
- (NSString* _Nonnull)getDropoffPath;
- (NSString* _Nonnull)getDropoffPicturePath;
- (ReportChange* _Nullable)getLastChange;
/**
 * /////////////////////////////////////
 */
- (ReportPart* _Nullable)getPart;
- (NSString* _Nonnull)getPicturePath;
- (ReportStruct* _Nullable)getReport;
- (NSString* _Nonnull)getTempPath;
// skipped method Support.GetTmpMeta with unsupported parameter or return types

- (BOOL)haveDropin;
- (BOOL)haveDropoff;
/**
 * 	permet de savoire si il faut download
	une image en verifiant si un path s3 est present
 */
- (BOOL)haveDropoffPictureToDownload;
- (BOOL)haveDropoffState;
/**
 * 	permet de savoire si il faut download
	une image en verifiant si un path s3 est present
 */
- (BOOL)havePictureToDownload;
- (BOOL)haveTemp;
- (NSString* _Nonnull)imgType;
/**
 * 	Suprime tout les information d'entrer

	TODO: cas peut etre a gerer le met reviens faut il faire une copie
	en gros je commence -> juplod -> je recuper -> je modifie il se passe quoi ?
	voire pour peut etre gerer une version temporaire comme pour l'image
 */
- (void)infosClean;
/**
 * 	renvois le nombre d'info/annotation du dropin
 */
- (long)infosCount;
/**
 * 	Renvois l'information a l index x
	TODO: securiser du out of index
 */
- (ReportProcessInfos* _Nullable)infosGet:(long)num;
- (BOOL)isCompleted;
- (void)onChange:(NSString* _Nullable)value;
- (void)removeLink:(ReportStruct* _Nullable)rpt part:(ReportPart* _Nullable)part;
/**
 * /////////	Photo Protocol /////////////
 */
- (void)removeTemporary;
- (void)saveHandler:(id<ReportChangeHandler> _Nullable)h;
- (void)setTemplateMode;
- (NSString* _Nonnull)titleTr;
- (long)uid;
- (NSString* _Nonnull)uTplName;
- (void)updateByApi:(ReportSupport* _Nullable)n;
- (NSString* _Nonnull)writeImage:(NSData* _Nullable)data error:(NSError* _Nullable* _Nullable)error;
@end

@interface ReportUpload : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull key;
@property (nonatomic) NSString* _Nonnull hash;
@property (nonatomic) double percent;
@property (nonatomic) NSString* _Nonnull url;
@property (nonatomic) long step;
@property (nonatomic) NSString* _Nonnull sessionKey;
@property (nonatomic) NSString* _Nonnull proovCode;
// skipped field Upload.Title_ with unsupported type: github.com/ProovGroup/weproov-sdk-go/translations.Translation

// skipped field Upload.Error with unsupported type: github.com/ProovGroup/weproov-sdk-go/wperr.Wperror

// skipped field Upload.FinishedAt with unsupported type: time.Time

- (BOOL)autoUpload:(long* _Nullable)ret0_ error:(NSError* _Nullable* _Nullable)error;
- (void)delete;
- (double)getAdvencement;
- (WperrWperror* _Nullable)getError;
/**
 * 	Renvoy l'url de l api pour avoire l'url presigner
 */
- (NSString* _Nonnull)getPackageApiUrl;
- (NSData* _Nullable)getPackageCrypted:(NSError* _Nullable* _Nullable)error;
- (NSData* _Nullable)getPackageData:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)getPackageFullPath;
- (int64_t)getTimeFinished;
- (NSString* _Nonnull)getTitle;
- (void)setAdvencement:(double)value;
- (void)setError:(long)code value:(NSString* _Nullable)value;
- (void)startStep:(long)step;
@end

@interface ReportVinInfoStruct : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull vin;
@property (nonatomic) NSString* _Nonnull lastName;
@property (nonatomic) NSString* _Nonnull firstName;
@property (nonatomic) NSString* _Nonnull mail;
@property (nonatomic) NSString* _Nonnull brand;
@property (nonatomic) NSString* _Nonnull model;
@end

@interface ReportVinRequestStruct : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull vin;
@property (nonatomic) BOOL isControlKey;
@property (nonatomic) NSString* _Nonnull controlKey;
@property (nonatomic) NSString* _Nonnull controlKeyName;
@property (nonatomic) NSString* _Nonnull country;
@end

@interface ReportWebviewParameters : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull url;
@property (nonatomic) BOOL enableGeoloc;
@end

@interface ReportWebviewValue : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull name;
@property (nonatomic) NSString* _Nonnull value;
@end

/**
 * 	State
	toCompare = 0
	signaled = 0
 */
FOUNDATION_EXPORT const int64_t ReportProcessOk;
/**
 * 	State
	toCompare = 0
	signaled = 0
 */
FOUNDATION_EXPORT const int64_t ReportProcessSignaled;
/**
 * 	State
	toCompare = 0
	signaled = 0
 */
FOUNDATION_EXPORT const int64_t ReportProcessToCompate;

@interface Report : NSObject
+ (long) maX_ADDITIONAL_PICTURES;
+ (void) setMAX_ADDITIONAL_PICTURES:(long)v;

@end

FOUNDATION_EXPORT void ReportDeleteReport(ReportStruct* _Nullable r, id<ReportDeleteDelegate> _Nullable delegate);

FOUNDATION_EXPORT void ReportExist(NSString* _Nullable proovcode, id<ReportExistDelegate> _Nullable delegate);

FOUNDATION_EXPORT BOOL ReportExistSync(NSString* _Nullable proovcode, BOOL* _Nullable ret0_, NSError* _Nullable* _Nullable error);

/**
 * requiredProcessFieldsDropoff
requiredProcessFieldsDropoffWithImage

freeProcessFieldsDropoff          r:false
freeProcessFieldsDropoffWithImage r:false
 */
FOUNDATION_EXPORT ReportProcessStateList* _Nullable ReportExtract(ReportStruct* _Nullable rpt, BOOL Required, BOOL haveTemporyData, BOOL WithFirst);

FOUNDATION_EXPORT ReportProcessStateList* _Nullable ReportExtractAll(ReportStruct* _Nullable rpt);

/**
 * freeProcessFields
 */
FOUNDATION_EXPORT ReportProcessStateList* _Nullable ReportExtractFree(ReportStruct* _Nullable rpt);

/**
 * freeProcessFieldsDropoff
 */
FOUNDATION_EXPORT ReportProcessStateList* _Nullable ReportExtractFreeDropoff(ReportStruct* _Nullable rpt);

/**
 * freeProcessFieldsDropoffWithImage
 */
FOUNDATION_EXPORT ReportProcessStateList* _Nullable ReportExtractFreeDropoffWithImage(ReportStruct* _Nullable rpt);

/**
 * libre au retour
processFieldsFreeForDropoff
 */
FOUNDATION_EXPORT ReportProcessStateList* _Nullable ReportExtractFreeForDropoff(ReportStruct* _Nullable rpt);

/**
 * freeProcessFieldsWithImage
 */
FOUNDATION_EXPORT ReportProcessStateList* _Nullable ReportExtractFreeWithImage(ReportStruct* _Nullable rpt);

/**
 * requiredProcessFields
 */
FOUNDATION_EXPORT ReportProcessStateList* _Nullable ReportExtractRequired(ReportStruct* _Nullable rpt);

/**
 * requiredProcessFieldsDropoff
 */
FOUNDATION_EXPORT ReportProcessStateList* _Nullable ReportExtractRequiredDropoff(ReportStruct* _Nullable rpt);

/**
 * requiredProcessFieldsDropoffWithImage
 */
FOUNDATION_EXPORT ReportProcessStateList* _Nullable ReportExtractRequiredDropoffWithImage(ReportStruct* _Nullable rpt);

/**
 * requiredProcessFieldsWithImage
 */
FOUNDATION_EXPORT ReportProcessStateList* _Nullable ReportExtractRequiredWithImage(ReportStruct* _Nullable rpt);

/**
 * processFieldsSignaled
 */
FOUNDATION_EXPORT ReportProcessStateList* _Nullable ReportExtractSignaled(ReportStruct* _Nullable rpt);

/**
 * processFieldsToCompare
 */
FOUNDATION_EXPORT ReportProcessStateList* _Nullable ReportExtractToCompare(ReportStruct* _Nullable rpt);

/**
 * 	Recuperer un Dossier sur le disque dur
 */
FOUNDATION_EXPORT ReportStruct* _Nullable ReportGetCurrent(void);

/**
 * 	Recuperer un Dossier sur le disque dur et l'envoyer au format string
 */
FOUNDATION_EXPORT NSString* _Nonnull ReportGetCurrentStr(void);

FOUNDATION_EXPORT void ReportGetFromTemplate(BOOL forceRefresh, long id_, id<ReportFullDelegate> _Nullable delegate);

FOUNDATION_EXPORT void ReportGetFromTemplateWithFields(long id_, NSString* _Nullable fields, id<ReportFullDelegate> _Nullable delegate);

FOUNDATION_EXPORT void ReportGetItemList(long itemId, NSString* _Nullable states, NSString* _Nullable find, long offset, long limit, id<ReportListDelegate> _Nullable delegate);

FOUNDATION_EXPORT ReportList* _Nullable ReportGetItemListSync(long itemId, NSString* _Nullable states, NSString* _Nullable find, long offset, long limit, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT void ReportGetList(NSString* _Nullable state, NSString* _Nullable find, long offset, long limit, id<ReportListDelegate> _Nullable delegate);

FOUNDATION_EXPORT ReportList* _Nullable ReportGetListSync(NSString* _Nullable state, NSString* _Nullable find, long offset, long limit, NSError* _Nullable* _Nullable error);

/**
 * 	Permet de recuperer la liste de clee des fichier a upload
 */
FOUNDATION_EXPORT ReportListUpload* _Nullable ReportGetListUpload(void);

// skipped function GetMetaImage with unsupported parameter or return types


FOUNDATION_EXPORT void ReportGetProovCode(NSString* _Nullable proovCode, id<ReportFullDelegate> _Nullable delegate);

FOUNDATION_EXPORT NSString* _Nonnull ReportGetProovCodeSync(NSString* _Nullable proovCode, NSError* _Nullable* _Nullable error);

/**
 * 	Verrifie si un dossier existe sur
	le disque dure

	il peut exister si il y a eu une coupure de l'app
	alors que l'utilisateur na pas fait
	signer et terminer / quitter proprement
 */
FOUNDATION_EXPORT BOOL ReportHaveCurrent(void);

FOUNDATION_EXPORT ReportStruct* _Nullable ReportNewByProovCodeSync(NSString* _Nullable proovCode, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT ReportStruct* _Nullable ReportNewByStringReport(NSString* _Nullable rptStr, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT ReportStruct* _Nullable ReportNewByStringTemplate(NSString* _Nullable templateStr, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT ReportStruct* _Nullable ReportNewByTemplate(BOOL forceRefresh, long templateId, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT ReportStruct* _Nullable ReportNewByTemplateWithFields(long templateId, NSString* _Nullable fields, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT ReportProcessInfosDamages* _Nullable ReportNewProcessInfosDamage(long choice, NSString* _Nullable description, double x, double y, double width, double height);

FOUNDATION_EXPORT NSString* _Nonnull ReportPreparePackageSync(ReportStruct* _Nullable r, NSError* _Nullable* _Nullable error);

/**
 * 	suprime le dossier contenue dans le disque dure
	avec toute les photo
 */
FOUNDATION_EXPORT void ReportRemoveCurrent(void);

FOUNDATION_EXPORT void ReportRestor(void);

/**
 * 	Sauvgarde le rapport sur le disque dur
 */
FOUNDATION_EXPORT void ReportSaveReport(ReportStruct* _Nullable r);

@class ReportChangeHandler;

@class ReportCloseDelegate;

@class ReportDeleteDelegate;

@class ReportExistDelegate;

@class ReportField;

@class ReportFullDelegate;

@class ReportListDelegate;

@class ReportPDFDownloadDelegate;

@class ReportPhoto;

@class ReportSignPartDelegate;

@class ReportVINDelegate;

@interface ReportChangeHandler : NSObject <goSeqRefInterface, ReportChangeHandler> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)onChange:(ReportChange* _Nullable)p0;
@end

@interface ReportCloseDelegate : NSObject <goSeqRefInterface, ReportCloseDelegate> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)onCloseError:(NSError* _Nullable)err;
- (void)onCloseSuccess;
@end

@interface ReportDeleteDelegate : NSObject <goSeqRefInterface, ReportDeleteDelegate> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)onDeleteError:(NSError* _Nullable)err;
- (void)onDeleteSuccess;
@end

@interface ReportExistDelegate : NSObject <goSeqRefInterface, ReportExistDelegate> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)reportExist:(BOOL)p0;
- (void)reportExistError:(NSError* _Nullable)p0;
@end

/**
 * 	Field est une interface qui
	a pour but d'englober les champs infos et checkliste
	qui marche + / - de la meme façons
 */
@interface ReportField : NSObject <goSeqRefInterface, ReportField> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * 		recuper la valeur de retour
 */
- (NSString* _Nonnull)dropoffValueF;
- (id<ReportField> _Nullable)getAsField;
/**
 * 		premet de recuperer les parametres du champs
 */
- (ReportInfosParameters* _Nullable)getParams;
- (ReportPart* _Nullable)getPart;
- (ReportStruct* _Nullable)getReport;
/**
 * 		permet de savoire si le champs a un etat dropoff
 */
- (BOOL)haveDropoff;
/**
 * 		Peremet de savoir si le champs est requis
 */
- (BOOL)isRequire;
/**
 * 		Retourne le nom du champs
 */
- (NSString* _Nonnull)nameF;
/**
 * 		Retourne titre traduis du champs pour changer la langue se reporter au rapport
 */
- (NSString* _Nonnull)titleTr;
/**
 * 		Retourne le type de champs
		possibiliter: ["text", "number", "list", "date", "scan", "boolean", "numeric"]
 */
- (NSString* _Nonnull)typeF;
/**
 * 		recuper la valeur de depart
 */
- (NSString* _Nonnull)valueF;
/**
 * 		Ecrie la valeur au bonne endrois
 */
- (NSString* _Nonnull)writeValue:(NSString* _Nullable)p0;
@end

@interface ReportFullDelegate : NSObject <goSeqRefInterface, ReportFullDelegate> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)onReportFullError:(NSError* _Nullable)err;
- (void)onReportFullSuccess:(ReportStruct* _Nullable)report;
@end

@interface ReportListDelegate : NSObject <goSeqRefInterface, ReportListDelegate> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)onReportFindError:(NSError* _Nullable)err;
- (void)onReportFindsuccess:(ReportList* _Nullable)list;
@end

@interface ReportPDFDownloadDelegate : NSObject <goSeqRefInterface, ReportPDFDownloadDelegate> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)onPdfDownloadedError:(NSError* _Nullable)err;
- (void)onPdfDownloadedSuccess:(NSString* _Nullable)path;
@end

/**
 * ReportPhotoProtocol
 */
@interface ReportPhoto : NSObject <goSeqRefInterface, ReportPhoto> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (NSString* _Nonnull)getDropinPath;
- (NSString* _Nonnull)getDropoffPath;
- (BOOL)haveDropin;
- (BOOL)haveDropoff;
- (BOOL)haveDropoffState;
- (void)removeTemporary;
- (NSString* _Nonnull)titleTr;
- (NSString* _Nonnull)uTplName;
- (NSString* _Nonnull)writeImage:(NSData* _Nullable)p0 error:(NSError* _Nullable* _Nullable)error;
@end

@interface ReportSignPartDelegate : NSObject <goSeqRefInterface, ReportSignPartDelegate> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)onSignatureUploadError:(NSError* _Nullable)err;
- (void)onSignatureUploadSuccess;
@end

@interface ReportVINDelegate : NSObject <goSeqRefInterface, ReportVINDelegate> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)onVINError:(NSError* _Nullable)err;
- (void)onVINSuccess;
@end

#endif
